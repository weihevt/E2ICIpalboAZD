function [parop,cost,exitflag,output,population,scores] = E2ICIpalboAZD_findcohort(x0,args,lb,ub,...
          ind,power_par,opt,InitialPMuse,PopulationSize,Generations,costthreshold,numsize,...
          numdirecadd,numMaxEliteCount)
%% (22) Function index in the GitHub repository
% This function generates the parameter cohort and is called by E2ICIpalboAZD_parcohort().

% input:
% X0, inital parameter values.
% PAR: Complete full parameters vectors.
% lb: lower bounds for parameters.
% ub: upper bounds for parameters.
% ind: indices of parameters included in the optimization.
% power_par: indices of parameters that act as exponents in equations, with their corresponding lb and ub.
% opt: Boolean flag-true to run the optimization, false to skip it.
% PopulationSize: specifies the number of individuals per generation in the GA algorithm.
% Generations: specifies the maximum number of iterations for the GA to perform.
% costthreshold: cost value threshold; values below this will be retained in the parameter cohort.
% numsize: once populationT contains numsize members, compute its variance.
% numdirecadd = 2; number of directions added to exploration.
% numMaxEliteCount: maximum number of elite members.

params.lb = lb;
params.ub = ub;
params.args = args;
params.ind = ind;
params.opt = opt;
params.PopulationSize = PopulationSize;

EliteCount = min(ceil(PopulationSize * 0.05),numMaxEliteCount);

% optionsga =...
%     optimoptions('ga',...
%                  'PopulationSize',PopulationSize,...
%                  'Generations',Generations,...
%                  'PopInitRange',[lb';ub'],...
%                  'InitialPopulation',InitialPMuse,...
%                  'EliteCount',EliteCount,...
%                  'CrossoverFraction',0.1,...
%                  'MutationFcn',...
%                  @(x,y,z,a,b,c,d)E2ICIpalboAZD_mutation(x,y,z,a,b,c,d,numsize,ind,numdirecadd,costthreshold,power_par),...
%                  'OutputFcns',...
%                  @(x,y,z)E2ICIpalboAZD_gaoutput(x,y,z,costthreshold),...
%                  'UseParallel',false);

% This option simply disables self mutation function, in practice, I don't notice much difference.
optionsga = optimoptions('ga',...
                         'PopulationSize',PopulationSize,...
                         'Generations',Generations,...
                         'PopInitRange',[lb';ub'],...
                         'InitialPopulation',InitialPMuse,...
                         'EliteCount',EliteCount,...
                         'CrossoverFraction',0,...
                         'OutputFcns',@(x,y,z)E2ICIpalboAZD_gaoutput(x,y,z,costthreshold));


[x,cost,exitflag,output,population,scores] = ga(@(x)child_intrafun(x,params),numel(x0),...
                                               [],[],[],[],lb,ub,[],optionsga);

parop = x;
end

function fval = child_intrafun(x,params)
ind = params.ind;
args = params.args;
opt = params.opt;
i_group = 0;

fval = E2ICIpalboAZD_evlcost(x,args,ind,i_group,opt);
end