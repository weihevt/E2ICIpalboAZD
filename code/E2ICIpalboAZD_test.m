function E2ICIpalboAZD_test()
%% (2) Function index in the GitHub repository
% This function estimates model parameters based on experimental data.

pathsave = './mat/';
warning('off','all')

algorithm = 2; % 1:fminsearch,2:patternsearch,3:ga
method = 1; % 1:loop through group,2:loop through parameter 1 by 1,3:random choose
num_randomchoose = 15;

args = E2ICIpalboAZD_modelpar();

opt = false;
cost = E2ICIpalboAZD_evlcost([],args,[],[],opt);
fprintf('%d\n',uint64(cost))

ratio = 0.9;
ratiofind = 0.1;
x0 = args.PAR(args.groupparall);
lbuse = args.lb(args.groupparall);
ubuse = args.ub(args.groupparall);

ind = sort([find((x0 - lbuse)./lbuse < ratiofind);find((ubuse - x0)./x0 < ratiofind)]);
parlbub = [args.groupparall,lbuse,x0,ubuse,x0 * ratio,x0 * 1/ratio];

for i = 1 : numel(ind)
    disp(['index = ',num2str(parlbub(ind(i),1)),...
        ', parvalue = ',num2str(parlbub(ind(i),3)),...
        ', lbvalue = ',num2str(parlbub(ind(i),5)),...
        ', ubvalue = ',num2str(parlbub(ind(i),6))])
end

i_iter = 1;
fval0 = cost;
if algorithm == 1
    optcon = optimoptions('fmincon','MaxFunEvals',5e4); % 'FunctionTolerance',1e-2
elseif algorithm == 2
    optcon = optimoptions('patternsearch',...
                          'MaxTime',3600*4,...
                          'Cache','on',...
                          'MaxIterations',6e4,...
                          'FunctionTolerance',1e-2,...
                          'UseCompletePoll',true,...
                          'UseParallel',false); 
                           % 'StepTolerance',1e-6, 'PollMethod', 'MADSPositiveBasis2N'
elseif algorithm ==3
    optcon = optimoptions('ga',...
                          'TimeLimit',3600*24*1,...
                          'FunctionTolerance',1e-2,...
                          'UseParallel',true);
end

% parpool
% pctRunOnAll warning('off','all')

while 1 > 0
    if method == 1
        for i_group = [1,2,3,4,5,6]
            groupusepar = args.grouppar{i_group}';
            [PARupdate, fval] = child_E2ICIpalboAZD_test(pathsave,...
                                                         args,...
                                                         groupusepar,...
                                                         args.lb,...
                                                         args.ub,...
                                                         algorithm,...
                                                         optcon,...
                                                         fval0,...
                                                         i_group,...
                                                         i_iter);
            fval0 = fval;
            args.PAR = PARupdate;
        end
        i_iter = i_iter + 1;
    elseif method == 2
        for i = 1:length(groupparall)
            groupusepar = groupparall(i);
            i_group = i;
            [PARupdate, fval] = child_E2ICIpalboAZD_test(pathsave,...
                                                         args,...
                                                         groupusepar,...
                                                         args.lb,...
                                                         args.ub,...
                                                         algorithm,...
                                                         optcon,...
                                                         fval0,...
                                                         i_group,...
                                                         i_iter);
            fval0 = fval;
            args.PAR = PARupdate;
        end
        i_iter = i_iter + 1;
    elseif method == 3
        groupusepar = args.groupparall(randsample(numel(args.groupparall),num_randomchoose));
        i_group = 1;
        [PARupdate, fval] = child_E2ICIpalboAZD_test(pathsave,...
                                                     args,...
                                                     groupusepar,...
                                                     args.lb,...
                                                     args.ub,...
                                                     algorithm,...
                                                     optcon,...
                                                     fval0,...
                                                     i_group,...
                                                     i_iter);
        fval0 = fval;
        args.PAR = PARupdate;
        i_iter = i_iter + 1;
    end
end
end


function [PAR, fval0] = child_E2ICIpalboAZD_test(pathsave,...,
                                                 args,...
                                                 groupusepar,...
                                                 lb,...
                                                 ub,...
                                                 algorithm,...
                                                 optcon,...
                                                 fval0,...
                                                 i_group,...
                                                 i_iter)

x0 = args.PAR(groupusepar);
lbuse = lb(groupusepar);
ubuse = ub(groupusepar);
opt = true;
if algorithm == 1
    [PARop,fval] = fmincon(@(x)E2ICIpalboAZD_evlcost(x,...
                                                     args,...
                                                     groupusepar,...
                                                     i_group,...
                                                     opt),...
                                                     x0,[],[],[],[],lbuse,ubuse,[],optcon);
elseif algorithm == 2
    [PARop,fval] = patternsearch(@(x)E2ICIpalboAZD_evlcost(x,...
                                                           args,...
                                                           groupusepar,...
                                                           i_group,...  
                                                           opt),...
                                                           x0,[],[],[],[],lbuse,ubuse,[],optcon);
elseif algorithm == 3
    [PARop,fval] = ga(@(x)E2ICIpalboAZD_evlcost(x,...
                                                args,...
                                                groupusepar,...
                                                i_group,...
                                                opt), ...
                                                numel(lbuse),[],[],[],[],lbuse,ubuse,[],optcon);
end
if fval < fval0
    PARop = PARop(:);
    args.PAR(groupusepar) = PARop;
    PAR = args.PAR;
    fval0 = fval;
    disp([i_iter,i_group,fval0])
    save([pathsave, 'PAR.mat'],'PAR')
else
    disp([i_iter,i_group,fval0])
end
PAR = args.PAR;
end